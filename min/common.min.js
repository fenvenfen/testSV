var cropperApp = angular.module('svApp', [
    'ngRoute',
    'dataService',
    'makeDataService',
    'personalInfoDirective',
    'summaryDataDirective',
    'chartsDirective'
])

cropperApp.config(function($routeProvider,$locationProvider) {
    $routeProvider
    .when("/", {
        templateUrl : "app/layout/home.html"
    })
    .when("/profile", {
        templateUrl : "app/layout/profile.html"
    })
    .when("/charts", {
        templateUrl : "app/layout/charts.html"
    })

    $locationProvider.hashPrefix('');
    $locationProvider.html5Mode(true)
    
});

cropperApp.controller('MainCtrl', ['$scope', '$http', 'personInfo', function ($scope, $http, personInfo) {
    console.log("MAIN CONTORLLER")
    $scope.titleOfMainPage = "My Personal Page";
    $scope.showCharts = false;
    //Get main data from json and send to save in service
    $http.get('../data.json').then(function (response) {
        personInfo.setInfoData(angular.copy(response.data))
    });

    $scope.openBlockCharts = function(){
        $scope.showCharts = false;
    }

}]);

angular.module('chartsDirective', [
    'workDirective',
    'makeDataService'
])

    .directive('charts', [ function () {
        return {
            scope: {},
            controller: ['$scope', '$element', 'makeDataToCharts', '$compile', function ($scope, $element, makeDataToCharts, $compile) {
                // Load the Visualization API and the corechart package.
                // google.charts.load('current', {'packages':['corechart']});
                google.charts.load('current', {packages: ['corechart', 'bar']});
                // make title for charts
                let title = ['Skill', 'Stars']
                let dataFactoru = new makeDataToCharts(title);

                dataFactoru.makeData().then(responce => {
                     google.charts.setOnLoadCallback(function(){drawMultSeries(responce)});
                });

                function drawMultSeries(res) {
                    let chartsType = ['LineChart', 'BarChart', 'ColumnChart', 'PieChart'];
                    let option = {
                        // 'chartType':'LineChart',
                         'options': {'title':'Default charts title', 'legend':'none','width': '100%','height': '100%'}
                        }
                    if(res){
                        option.dataTable = res;
                    }else{
                      // Default Option if some was wrong 
                        option.dataSourceUrl = 'http://spreadsheets.google.com/tq?key=pCQbetd-CptGXxxQIG7VFIQ&pub=1';
                    }
                    // Different charts
                    chartsType.forEach(type => {
                        let wrap = null;
                        let div = '<div id=' + type + ' style="width: 300px; height: 300px; display: inline-block;"></div>';
                        let el = $compile(angular.element(div))($scope);
                        $element.append(el);

                        option.chartType = type;
                        option.options.title = "Chart " + type
                        wrap = new google.visualization.ChartWrapper(option);
                        wrap.draw($element[0].querySelector('#'+ type + ''));
                    })
                  }
            }],
            template: function () {
                return `<h2>Charts</h2>`
            }
        }      
    }])
angular.module('personalInfoDirective', [])

    .directive('personalInfo', [ function () {
        var directive = {};

        directive.scope = {
            ghInfo: '='
        };

        directive.controller = ['$scope', 'personInfo', function ($scope, personInfo) {
            // Get data from service
            $scope.data = personInfo.getOriginaInfoData();
        }];

        directive.template = function() {
            return  `<h1 class="center">{{ghInfo}} <span class="badge badge-secondary">v1.0.0</span></h1>
                <div ng-repeat="(key, value) in data.sv.info">
                    <h5>{{key}}:<span>  {{value}} </span></h5>
                </div>
            `
        }
        return directive
    }])
angular.module('summaryDataDirective', [
    'workDirective'
])

    .directive('summaryData', [ function () {
        return {
            scope: {},
            controller: ['$scope',  'personInfo', function ($scope, personInfo) {
                let data = personInfo.getOriginaInfoData();
                $scope.sum = data.sv.summary;
                $scope.edu = data.sv.education;
                $scope.experience = data.sv.experience;
            }],
            template: function () {
                return `<div class="container">
                <h2>Profile</h2>
                <div><p>{{sum.mainInfo}}</p></div>
                <h6>Education</h6>
                <ul>
                    <li ng-repeat="education in edu">{{education}}</li>
                </ul>
                <h6>Work experience</h6>
                <work-experience></work-experience></div>`
            }
        }      
    }])
angular.module('workDirective', [])

    .directive('workExperience', [ function () {
        return {
            controller: ['$scope', 'personInfo', function ($scope, personInfo) {
                console.log($scope)
            }],
            template: function () {
                return `
                <ul>
                    <li ng-repeat="exp in experience | orderBy:$index:true">{{exp.title}} <span class="badge badge-secondary">{{exp.position}}</span>
                        <div>
                            <p class="badge badge-secondary">{{exp.date}}</p>
                            <p>{{exp.about}}</p>
                        </div>
                    </li>
                </ul>`
            }
        }      
    }])
angular.module('dataService', [])
    .service('personInfo', function(){
        // Service data
        let originalData = [];

        this.setInfoData = function(data){
            originalData = data;
        }
        this.getOriginaInfoData = function(){
            return originalData;
        }
    })
angular.module('makeDataService', [])
    .service('makeDataToCharts', ['$q', 'personInfo', function($q, personInfo){
        
        let dataFactory = function(title){
            this.makeData = function(){            
                var deferred = $q.defer();
                let data = personInfo.getOriginaInfoData();

                changeData(data.sv.skills, title).then(res => {
                    deferred.resolve(res)
                })

                return deferred.promise;
            };
            function changeData(data, title){
                var deferred = $q.defer();
                let arrayDatatitle = []; 
                arrayDatatitle.push(title);
                for(skill in data){
                    let tempArray = [];
                    tempArray.push(data[skill].titel, Number(data[skill].level))
                    arrayDatatitle.push(tempArray)
                }

                deferred.resolve(makeArrayToGoogleCharts(arrayDatatitle))

                return deferred.promise;
            }
            function makeArrayToGoogleCharts(res){
                // Make call to google charts if we nead some functional of charts in service
                google.charts.load('current', {packages: ['corechart']});
                
                return google.charts.setOnLoadCallback(() =>{
                    let data = new google.visualization.arrayToDataTable(res);
                    // Same code (groupe, join, etc.)
                    return data;
                  })

            }
        }

        return dataFactory
    }])